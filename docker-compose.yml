name: oss-llmops-stack

services:
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    restart: always
    depends_on: &langfuse-depends-on
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    environment: &langfuse-worker-env
      DATABASE_URL: postgresql://postgres:${LANGFUSE_DB_PASSWORD:-postgres}@postgres:5432/postgres
      SALT: "${LANGFUSE_SALT}"
      ENCRYPTION_KEY: "${LANGFUSE_ENCRYPTION_KEY}"
      TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-true}
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: ${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}
      CLICKHOUSE_MIGRATION_URL: ${CLICKHOUSE_MIGRATION_URL:-clickhouse://clickhouse:9000}
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-http://clickhouse:8123}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-clickhouse}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-clickhouse}
      CLICKHOUSE_CLUSTER_ENABLED: ${CLICKHOUSE_CLUSTER_ENABLED:-false}
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: ${LANGFUSE_S3_EVENT_UPLOAD_BUCKET:-langfuse}
      LANGFUSE_S3_EVENT_UPLOAD_REGION: ${LANGFUSE_S3_EVENT_UPLOAD_REGION:-us-east-1}
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: "${MINIO_ROOT_USER:-minio}"
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: "${MINIO_ROOT_PASSWORD:-miniosecret}"
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: "http://minio:9000"
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: ${LANGFUSE_S3_EVENT_UPLOAD_PREFIX:-events/}
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: ${LANGFUSE_S3_MEDIA_UPLOAD_BUCKET:-langfuse}
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: ${LANGFUSE_S3_MEDIA_UPLOAD_REGION:-us-east-1}
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: "${MINIO_ROOT_USER:-minio}"
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: "${MINIO_ROOT_PASSWORD:-miniosecret}"
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: "http://minio:9000"
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: "true"
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: ${LANGFUSE_S3_MEDIA_UPLOAD_PREFIX:-media/}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_AUTH: "${REDIS_PASSWORD}"

  langfuse-web:
    image: langfuse/langfuse:3
    restart: always
    depends_on: *langfuse-depends-on
    ports:
      - "3000"
    environment:
      <<: *langfuse-worker-env
      NEXTAUTH_URL: "${LANGFUSE_PUBLIC_URL}"
      NEXTAUTH_SECRET: "${NEXTAUTH_SECRET}"
      - SERVICE_FQDN_LANGFUSE_WEB_3000
      LANGFUSE_INIT_ORG_ID: "${LANGFUSE_ORG_ID:-default-org}"
      LANGFUSE_INIT_ORG_NAME: "${LANGFUSE_ORG_NAME:-My Organization}"
      LANGFUSE_INIT_PROJECT_ID: "${LANGFUSE_PROJECT_ID:-default-project}"
      LANGFUSE_INIT_PROJECT_NAME: "${LANGFUSE_PROJECT_NAME:-My Project}"
      LANGFUSE_INIT_PROJECT_PUBLIC_KEY: "${LANGFUSE_PUBLIC_KEY}"
      LANGFUSE_INIT_PROJECT_SECRET_KEY: "${LANGFUSE_SECRET_KEY}"
      LANGFUSE_INIT_USER_EMAIL: "${LANGFUSE_ADMIN_EMAIL:-admin@example.com}"
      LANGFUSE_INIT_USER_NAME: "${LANGFUSE_ADMIN_NAME:-Admin User}"
      LANGFUSE_INIT_USER_PASSWORD: "${LANGFUSE_ADMIN_PASSWORD}"

  clickhouse:
    image: clickhouse/clickhouse-server
    restart: always
    user: "101:101"
    container_name: clickhouse
    hostname: clickhouse
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-clickhouse}
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  minio:
    image: minio/minio:latest
    restart: always
    container_name: minio
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER:-minio}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD:-miniosecret}"
    expose:
      - 9000
      - 9001
    volumes:
      - langfuse_minio_data:/data

  redis:
    image: redis:7
    restart: always
    command: >
      --requirepass "${REDIS_PASSWORD}"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  postgres:
    image: postgres:16
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "${LANGFUSE_DB_PASSWORD:-postgres}"
      POSTGRES_DB: postgres
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data

  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    volumes:
       - ./litellm-config.yaml:/app/config.yaml
    command:
       - "--config=/app/config.yaml"
    ports:
      - "4000"
    environment:
      DATABASE_URL: "postgresql://postgres:${LITELLM_DB_PASSWORD:-postgres}@litellm-db:5432/postgres"
      STORE_MODEL_IN_DB: "True"
      LANGFUSE_PUBLIC_KEY: "${LANGFUSE_PUBLIC_KEY}"
      LANGFUSE_SECRET_KEY: "${LANGFUSE_SECRET_KEY}"
      LANGFUSE_HOST: "http://langfuse-web:3000"
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
      - SERVICE_FQDN_LITELLM_4000
    depends_on:
      litellm-db:
        condition: service_healthy

  litellm-db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "${LITELLM_DB_PASSWORD:-postgres}"
      POSTGRES_DB: postgres
    volumes:
      - litellm-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10

volumes:
  langfuse_postgres_data: {}
  langfuse_clickhouse_data: {}
  langfuse_clickhouse_logs: {}
  langfuse_minio_data: {}
  litellm-db-data: {}
