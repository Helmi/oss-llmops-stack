name: oss-llmops-stack

services:
  langfuse-worker:
    image: langfuse/langfuse-worker:3
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/postgres
      - SALT=${SERVICE_BASE64_64_LANGFUSESALT}
      - ENCRYPTION_KEY=${SERVICE_BASE64_64_LANGFUSEENCRYPTIONKEY}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}
      - CLICKHOUSE_MIGRATION_URL=clickhouse://clickhouse:9000
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_USER=clickhouse
      - CLICKHOUSE_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE}
      - CLICKHOUSE_CLUSTER_ENABLED=false
      - LANGFUSE_S3_EVENT_UPLOAD_BUCKET=langfuse
      - LANGFUSE_S3_EVENT_UPLOAD_REGION=${LANGFUSE_S3_REGION:-us-east-1}
      - LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID=${SERVICE_USER_MINIO}
      - LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY=${SERVICE_PASSWORD_MINIO}
      - LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT=http://minio:9000
      - LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE=true
      - LANGFUSE_S3_EVENT_UPLOAD_PREFIX=events/
      - LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
      - LANGFUSE_S3_MEDIA_UPLOAD_REGION=${LANGFUSE_S3_REGION:-us-east-1}
      - LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=${SERVICE_USER_MINIO}
      - LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=${SERVICE_PASSWORD_MINIO}
      - LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://minio:9000
      - LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
      - LANGFUSE_S3_MEDIA_UPLOAD_PREFIX=media/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_AUTH=${SERVICE_PASSWORD_REDIS}

  langfuse-web:
    image: langfuse/langfuse:3
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    ports:
      - "3000"
    exclude_from_hc: true
    environment:
      - DATABASE_URL=postgresql://postgres:${SERVICE_PASSWORD_POSTGRES}@postgres:5432/postgres
      - SALT=${SERVICE_BASE64_64_LANGFUSESALT}
      - ENCRYPTION_KEY=${SERVICE_BASE64_64_LANGFUSEENCRYPTIONKEY}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}
      - CLICKHOUSE_MIGRATION_URL=clickhouse://clickhouse:9000
      - CLICKHOUSE_URL=http://clickhouse:8123
      - CLICKHOUSE_USER=clickhouse
      - CLICKHOUSE_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE}
      - CLICKHOUSE_CLUSTER_ENABLED=false
      - LANGFUSE_S3_EVENT_UPLOAD_BUCKET=langfuse
      - LANGFUSE_S3_EVENT_UPLOAD_REGION=${LANGFUSE_S3_REGION:-us-east-1}
      - LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID=${SERVICE_USER_MINIO}
      - LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY=${SERVICE_PASSWORD_MINIO}
      - LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT=http://minio:9000
      - LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE=true
      - LANGFUSE_S3_EVENT_UPLOAD_PREFIX=events/
      - LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
      - LANGFUSE_S3_MEDIA_UPLOAD_REGION=${LANGFUSE_S3_REGION:-us-east-1}
      - LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=${SERVICE_USER_MINIO}
      - LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=${SERVICE_PASSWORD_MINIO}
      - LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://minio:9000
      - LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
      - LANGFUSE_S3_MEDIA_UPLOAD_PREFIX=media/
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_AUTH=${SERVICE_PASSWORD_REDIS}
      - NEXTAUTH_URL=${SERVICE_FQDN_LANGFUSE-WEB_3000}
      - NEXTAUTH_SECRET=${SERVICE_BASE64_64_NEXTAUTHSECRET}
      - LANGFUSE_INIT_ORG_ID=${LANGFUSE_ORG_ID:-default-org}
      - LANGFUSE_INIT_ORG_NAME=${LANGFUSE_ORG_NAME:-My Organization}
      - LANGFUSE_INIT_PROJECT_ID=${LANGFUSE_PROJECT_ID:-default-project}
      - LANGFUSE_INIT_PROJECT_NAME=${LANGFUSE_PROJECT_NAME:-My Project}
      - LANGFUSE_INIT_PROJECT_PUBLIC_KEY=${SERVICE_BASE64_64_LANGFUSEPROJECTPK}
      - LANGFUSE_INIT_PROJECT_SECRET_KEY=${SERVICE_BASE64_64_LANGFUSEPROJECTSK}
      - LANGFUSE_INIT_USER_EMAIL=${LANGFUSE_ADMIN_EMAIL:-admin@example.com}
      - LANGFUSE_INIT_USER_NAME=${LANGFUSE_ADMIN_NAME:-Admin User}
      - LANGFUSE_INIT_USER_PASSWORD=${LANGFUSE_ADMIN_PASSWORD}

  clickhouse:
    image: clickhouse/clickhouse-server
    restart: always
    user: "101:101"
    environment:
      - CLICKHOUSE_DB=default
      - CLICKHOUSE_USER=clickhouse
      - CLICKHOUSE_PASSWORD=${SERVICE_PASSWORD_CLICKHOUSE}
    volumes:
      - langfuse_clickhouse_data:/var/lib/clickhouse
      - langfuse_clickhouse_logs:/var/log/clickhouse-server
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  minio:
    image: minio/minio
    restart: always
    entrypoint: sh
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      - MINIO_ROOT_USER=${SERVICE_USER_MINIO}
      - MINIO_ROOT_PASSWORD=${SERVICE_PASSWORD_MINIO}
    ports:
      - "9000"
      - "9001"
    volumes:
      - langfuse_minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 3s
      timeout: 15s
      retries: 5
      start_period: 1s

  redis:
    image: redis:7
    restart: always
    command: --requirepass ${SERVICE_PASSWORD_REDIS}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  postgres:
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - POSTGRES_DB=postgres
    volumes:
      - langfuse_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    restart: always
    volumes:
      - ./litellm-config.yaml:/app/config.yaml
    command:
      - "--config=/app/config.yaml"
    ports:
      - "4000"
    environment:
      - DATABASE_URL=postgresql://postgres:${SERVICE_PASSWORD_LITELLM-DB}@litellm-db:5432/postgres
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
      - UI_USERNAME=${LITELLM_UI_USERNAME}
      - UI_PASSWORD=${LITELLM_UI_PASSWORD}
      - LANGFUSE_PUBLIC_KEY=${SERVICE_BASE64_64_LANGFUSEPROJECTPK}
      - LANGFUSE_SECRET_KEY=${SERVICE_BASE64_64_LANGFUSEPROJECTSK}
      - LANGFUSE_HOST=http://langfuse-web:3000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
    depends_on:
      litellm-db:
        condition: service_healthy

  litellm-db:
    image: postgres:${POSTGRES_VERSION:-latest}
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_LITELLM-DB}
      - POSTGRES_DB=postgres
    volumes:
      - litellm-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 3s
      timeout: 3s
      retries: 10

volumes:
  langfuse_postgres_data: {}
  langfuse_clickhouse_data: {}
  langfuse_clickhouse_logs: {}
  langfuse_minio_data: {}
  litellm-db-data: {}
